from PACKET import *PACKETNAME = "MOVINGPIXEL"class MOVINGPIXEL(PACKET):    def __init__(self):        PACKET.__init__(self)        self.packname = "MOVINGPIXEL"        self.packinfo = "funny!"        class Particle():            def __init__(self, parent):                self.x = 10                self.y = 10                self.parent = parent                self.width = 10                self.height = 10                self.vely = random.randint(-1500, 1500)/200                self.velx = random.randint(-1500, 1500)/200                self.pixel = Tk()                self.pixel.attributes("-topmost", True)                self.pixel.overrideredirect(True)                self.pixel.config(bg="red")            def update(self):                if self.y + self.vely < 0:                    self.vely = -self.vely                if self.x + self.velx < 0:                    self.velx = -self.velx                if self.x + self.velx + self.width > self.parent.screenw:                    self.velx = -self.velx                if self.y + self.vely + self.height > self.parent.screenh:                    self.vely = -self.vely                self.x += self.velx                self.y += self.vely                self.pixel.geometry(f"{self.width}x{self.height}+{round(self.x)}+{round(self.y)}")        self.Pixel = Particle    def setup(self, args=None):        PACKET.setup(self)    def run(self):        self.win = Tk()        self.win.geometry("0x0")        self.win.overrideredirect(True)        self.screenw = 500        self.screenh = 500        self.particles = []        for i in range(100):            self.p1 = self.Pixel(self)            self.particles.append(self.p1)        self.update()    def res(self, args):        self.run()        self.screenw = int(args[0])        self.screenh = int(args[1])    def exit(self, args=None):        self.win.destroy()        for i in self.particles:            i.pixel.destroy()    def update(self):        self.win.after(1, self.update)        for i in self.particles:            i.update()        